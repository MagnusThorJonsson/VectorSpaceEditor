<Window x:Name="VectorSpaceMainWindow" x:Class="VectorSpace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:vcsp="clr-namespace:VectorSpace.Controls" 
        xmlns:behaviour="clr-namespace:VectorSpace.Behaviours"
        xmlns:local="clr-namespace:VectorSpace"
        Title="VectorSpace v0.1a" Height="720" Width="1280">
    <Window.CommandBindings>
        <CommandBinding Command="New" CanExecute="MenuItem_File_New_CanExecute" Executed="MenuItem_File_New_Executed" />
        <CommandBinding Command="Close" CanExecute="MenuItem_File_Close_CanExecute" Executed="MenuItem_File_Close_Executed" />
        <CommandBinding Command="{x:Static local:MainWindow.SelectToolShortcutCommand}" CanExecute="CanExecuteToolShortcutCommands" Executed="ExecutedSelectToolShortcutCommand" />
        <CommandBinding Command="{x:Static local:MainWindow.PaintToolShortcutCommand}" CanExecute="CanExecuteToolShortcutCommands" Executed="ExecutedPaintToolShortcutCommand" />
        <CommandBinding Command="{x:Static local:MainWindow.TransformToolShortcutCommand}" CanExecute="CanExecuteToolShortcutCommands" Executed="ExecutedTransformToolShortcutCommand" />
        <CommandBinding Command="{x:Static local:MainWindow.EditToolShortcutCommand}" CanExecute="CanExecuteToolShortcutCommands" Executed="ExecutedEditToolShortcutCommand" />
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Command="{x:Static local:MainWindow.SelectToolShortcutCommand}" Key="V" Modifiers="Control" />
        <KeyBinding Command="{x:Static local:MainWindow.PaintToolShortcutCommand}" Key="P" Modifiers="Control" />
        <KeyBinding Command="{x:Static local:MainWindow.TransformToolShortcutCommand}" Key="T" Modifiers="Control" />
        <KeyBinding Command="{x:Static local:MainWindow.EditToolShortcutCommand}" Key="E" Modifiers="Control" />
    </Window.InputBindings>
    
    <Window.Resources>
        <Style x:Key="LayerItemContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="White" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">

                        <StackPanel Name="ItemPanel" Orientation="Vertical">
                                <ContentPresenter x:Name="ContentHost" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Separator Margin="0" />
                        </StackPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter TargetName="ItemPanel" Property="Background">
                                    <Setter.Value>
                                        LightBlue
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="False">
                                <Setter TargetName="ItemPanel" Property="Background">
                                    <Setter.Value>
                                        White
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        
        <Menu IsMainMenu="True" Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <MenuItem Header="_File">
                <MenuItem Header="_New Level..." Command="New" />
                <Separator />
                <MenuItem Header="_Open Level..." Command="Open" />
                <MenuItem Header="_Save Level..." Command="Save" />
                <MenuItem Header="_Save Level As..." Command="SaveAs" />
                <MenuItem Header="_Close" Command="Close"/>
                <Separator />
                <MenuItem Header="_Exit" Click="MenuItem_File_Exit" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" Command="Undo" />
                <MenuItem Header="_Redo" Command="Redo" />
                <Separator />
                <MenuItem Header="_Cut" Command="Cut">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/menu-icon-cut.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Copy" Command="Copy">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/menu-icon-copy.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Paste" Command="Paste">
                    <MenuItem.Icon>
                        <Image Source="Resources/Menu/menu-icon-paste.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Settings" Click="MenuItem_Edit_Settings" />
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Name="ToolMenuItem_TextureManager" Header="_Texture Manager" IsEnabled="False" Click="MenuItem_Tools_TextureManager" />
            </MenuItem>
            <MenuItem Header="_View">
                <Separator />
                <MenuItem Header="_Show Grid" IsCheckable="True" Checked="MenuItem_View_ShowGridChecked" Unchecked="MenuItem_View_ShowGridUnchecked" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About VectorSpace" />
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" Name="MainWindowGrid" Margin="0,5,0,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="220"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Height="{Binding ElementName=MainWindowGrid, Path=ActualHeight}" Orientation="Vertical">
                <Label FontSize="10" HorizontalAlignment="Center">Tools</Label>
                <Separator />

                <ToggleButton Name="SelectToolBtn" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Select tool" IsEnabled="False" Margin="0, 5, 0, 5" Click="SelectToolBtn_Click">
                    <Image Source="Resources/Tools/icon-select.png"  Stretch="None" />
                </ToggleButton>

                <ToggleButton Name="PaintToolBtn" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Paint tool" IsEnabled="False" Click="PaintToolBtn_Click">
                    <Image Source="Resources/Tools/icon-paint.png"  Stretch="None" />
                </ToggleButton>

                <ToggleButton Name="TransformToolBtn" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Transform tool" IsEnabled="False" Margin="0, 5, 0, 5" Click="TransformToolBtn_Click">
                    <Image Source="Resources/Tools/icon-transform.png"  Stretch="None" />
                </ToggleButton>

                <ToggleButton Name="EditToolBtn" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Edit tool" IsEnabled="False" Margin="0, 0, 0, 5" Click="EditToolBtn_Click">
                    <Image Source="Resources/Tools/icon-edit.png"  Stretch="None" />
                </ToggleButton>

                <Separator />

            </StackPanel>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="140" />
                </Grid.RowDefinitions>
                
                <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="1">
                    <DockPanel Name="MainCanvasPanel" Visibility="Hidden">
                        <ScrollViewer DockPanel.Dock="Left" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
                            <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="1" Width="{Binding ElementName=LevelCanvas,Path=ActualWidth}"  Height="{Binding ElementName=LevelCanvas,Path=ActualHeight}">
                                <ItemsControl Name="LevelCanvas" Background="White" IsEnabled="False"
                                                MouseLeftButtonDown="CanvasMouseLeftButtonDown"
                                                MouseLeftButtonUp="CanvasMouseLeftButtonUp"
                                                MouseMove="CanvasMouseMove">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <vcsp:DragCanvas />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Texture.Source}" MouseDown="CanvasItem_MouseDown" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Border>
                        </ScrollViewer>
                    </DockPanel>
                </Border>

                <TabControl Name="CanvasItemsTab" Grid.Row="1" Margin="0, 5, 0, 0" SelectionChanged="CanvasItemsTab_SelectionChanged">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Header">
                                <Setter.Value>
                                    <Binding Path="Name"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.ItemContainerStyle>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            
                            <Border BorderBrush="#999999" BorderThickness="0,0,1,1">
                                <Border BorderBrush="#EEE" BorderThickness="1,1,0,0">
                                    <ListBox Name="TextureListBox" ItemsSource="{Binding Textures}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Disabled" SelectionMode="Single" BorderThickness="0" SelectionChanged="TextureListBox_SelectionChanged">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border x:Name="border" BorderThickness="1" BorderBrush="Gray" Margin="5, 0, 0, 0" Width="70" Height="70" Background="White" >
                                                    <Image Source="{Binding Source}" Stretch="Uniform" />
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.Style>
                                            <Style TargetType="ListBox">
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.Style>
                                    </ListBox>
                                </Border>
                            </Border>

                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Grid>
            
            <Grid Grid.Column="2" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="40*" />
                </Grid.RowDefinitions>


                <Border Grid.Row="0" BorderBrush="#999999" BorderThickness="0,0,1,1" Margin="5, 0, 5, 0">
                    <Border BorderBrush="#EEE" BorderThickness="1,1,0,0">

                        <DockPanel Name="LayerWindowDock">
                            <Label DockPanel.Dock="Top" FontWeight="Bold">Layers</Label>
                            <Separator DockPanel.Dock="Top" />

                            <Border DockPanel.Dock="Bottom" Margin="3,3,3,5">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    
                                    <Border Grid.Row="0" BorderBrush="#EEE" BorderThickness="0,0,1,1" Margin="2, 0, 2, 0">
                                        <Border BorderBrush="#999" BorderThickness="1,1,0,0">

                                            <ListBox Name="LayersListBox" HorizontalContentAlignment="Stretch" SelectionMode="Single">
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>

                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        
                                                        <Expander IsExpanded="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Header="{Binding Name}">
                                                            <ListBox Name="LayerItemListBox" behaviour:LayerItemSelectionBehaviour.ClickSelection="True" ItemContainerStyle="{StaticResource LayerItemContainerStyle}" 
                                                                     ItemsSource="{Binding Items}" HorizontalContentAlignment="Stretch" SelectionChanged="LayerItemListBox_SelectionChanged" SelectionMode="Single">
                                                                <ListBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Label Content="{Binding Name}" />
                                                                    </DataTemplate>
                                                                </ListBox.ItemTemplate>
                                                            </ListBox>
                                                        </Expander>
                                                        
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>

                                        </Border>
                                    </Border>

                                    <DockPanel Grid.Row="1">
                                        <Grid DockPanel.Dock="Right" Height="30" HorizontalAlignment="Right">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Button Name="RemoveLayerBtn" Grid.Column="0" VerticalAlignment="Center" ToolTip="Delete layer" Content="Remove" IsEnabled="False" Click="RemoveLayerBtn_Click" />
                                            <Button Name="AddLayerBtn" Grid.Column="1" VerticalAlignment="Center" ToolTip="Add new layer" Margin="5, 0" Content="Add new" IsEnabled="False" Click="AddLayerBtn_Click" />
                                        </Grid>
                                    </DockPanel>

                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                </Border>


                <Border Grid.Row="1" BorderBrush="#999999" BorderThickness="0,0,1,1" Margin="5, 5, 5, 0">
                    <Border BorderBrush="#EEE" BorderThickness="1,1,0,0">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <Label FontWeight="Bold">Properties:</Label>
                                    <Label VerticalAlignment="Bottom">
                                        <TextBlock Name="PropertyNameText" TextTrimming="CharacterEllipsis" Width="124" Margin="0, 0, 0, 0"></TextBlock>
                                    </Label>
                                </StackPanel>
                                <Separator Margin="0,0,0,5" />
                            </StackPanel>
                            
                            <DataGrid Grid.Row="1" Name="PropertiesDataGrid" AutoGenerateColumns="False" Margin="5, 0, 5, 0" BorderBrush="Gray">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Key" Binding="{Binding Path=Key}" Width="40*" />
                                    <DataGridTextColumn Header="Value" Binding="{Binding Path=Value}" Width="60*" />
                                </DataGrid.Columns>
                            </DataGrid>

                            <DockPanel Grid.Row="2">
                                <Grid DockPanel.Dock="Right" Height="30" HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Button Name="RemovePropertyBtn" Grid.Column="0" VerticalAlignment="Center" ToolTip="Delete property" Content="Remove" IsEnabled="False" Click="RemovePropertyBtn_Click" />
                                    <Button Name="AddPropertyBtn" Grid.Column="1" VerticalAlignment="Center" ToolTip="Add new property" Margin="5, 0" Content="Add new" IsEnabled="False" Click="AddPropertyBtn_Click" />
                                </Grid>
                            </DockPanel>

                        </Grid>
                    </Border>
                </Border>

            </Grid>
        </Grid>

        <DockPanel Grid.Row="2">
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90*"/>
                                <ColumnDefinition Width="10*"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem>
                    <TextBlock Name="Status">Ready</TextBlock>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>

    </Grid>
</Window>
